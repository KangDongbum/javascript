함수
	방정식
	
	function 함수명(...인수){
		// 처리 영역
		return 반환값
	}
	
	function sum(x){
		const result=x*2+2;
		
		return result;
	}
	
	함수의 호출 방법
	함수명(); -> 함수의 실행(호출)
	함수명(값);
	
	인수는 필수가 아니다
	function 함수명(){
	
	}
	
	반환값도 생략 가능(내부적으로는 return 키워드는 필수)
	
	반환값이 생략이 되면
	return undefined; 자동 추가가 된다.
	
	메모리
		- 데이터 영역 - 작성한 소스
		
		- 스택 영역 - 함수가 실행될때
		
		- 힙 영역 - 객체가 생성될 때
		
	전역변수 지역변수
	function sum(){
		const a=1;
		const b=2;
		
		return a+b;
	}
	
	자바스크립트에서 함수는 1급 함수 
	1) 인수를 함수로 사용 할 수 있다.
		배열객체.forEach(function(인수,인수...){
			
		});
		
	window.addEventListener("DOMContentLoaded",function(event){
		// event 객체의 출처는  addEventListener메소드 내부에서 인수로 받은 함수를
			호출할때 같이 넘겨준 인수
	});
	
	2) 함수를 반환
	
	익명함수
	1) 이름이 없는 함수
	const innerFunc=function(){
		
	};
		
		(1) const innerFunc선언
		(2)	익명함수 function 객체가 대입
		
객체 - Object - 사물, 대상
	- 자료형 중에 하나
	- 실행활의 상호작용을 많이 모사한 자료형 중에 하나
	
	- 특성 - 속성, 변수
	- 행위 - 함수, 메소드
	
	- 객체는 속성과 메소드로 구성된 자료형
	
	객체 정의{
	{
		속성: 값,(원시값, 객체(+함수 객체))
		속성: 값
	}
	
	
생성자
	- 객체를 생성하기 위한 것
	- 함수로 정의
		->  객체로 사용될 속성과 메소드를 정의
		
	function 생성자명(... 인수 ...){
		this. 속성명 = 값;
		this. 속성명 = 값;
	}
	
	생성자 -> 객체를 생성하기 위한 연산자 new
	
	생성자
		- protoype 속성
			- constructor - 생성자 원형 -> 정의도어 있어야 new 연사자를 통해 객체를 생성
			- _proto_
			
	{} -> 생성이 이미 되어 있는 인스턴스
	{} -> new Object()
	
	const -> 상수를 정의하는 선언자